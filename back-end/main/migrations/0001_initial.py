# Generated by Django 4.1.7 on 2023-05-15 16:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefono', models.CharField(default='', max_length=50, unique=True)),
                ('pais', models.CharField(default='', max_length=250)),
                ('estado', models.CharField(default='', max_length=250)),
                ('ciudad', models.CharField(default='', max_length=250)),
                ('direccion', models.CharField(default='', max_length=250)),
                ('foto_perfil', models.ImageField(null=True, upload_to='main/imagenes/usuarios')),
                ('fecha_alta', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Paises',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_pais', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=125)),
                ('contenido', models.CharField(max_length=1024)),
                ('imagen', models.ImageField(null=True, upload_to='main/imagenes/posts')),
                ('fecha_publicacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('num_likes', models.PositiveBigIntegerField(default=0)),
                ('num_visitas', models.BigIntegerField(default=0)),
                ('num_comentarios', models.BigIntegerField(default=0)),
                ('oculto', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificacionesAmistad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(max_length=10)),
                ('fecha_notificacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('procesada', models.BooleanField(default=False)),
                ('usuario_destino', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='usuario_destino', to=settings.AUTH_USER_MODEL)),
                ('usuario_origen', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='usuario_origen', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.posts')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Estados',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_estado', models.CharField(max_length=50)),
                ('id_pais', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.paises')),
            ],
        ),
        migrations.CreateModel(
            name='Comentarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.CharField(max_length=1024)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.posts')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ciudades',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('nombre_ciudad', models.CharField(max_length=250)),
                ('id_estado', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='main.estados')),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_mensaje', models.DateTimeField(default=django.utils.timezone.now)),
                ('leido', models.BooleanField(default=False)),
                ('mensaje', models.CharField(max_length=250)),
                ('emisor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='emisor', to=settings.AUTH_USER_MODEL)),
                ('receptor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='receptor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AmistadesCanceladas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_fin', models.DateTimeField(default=django.utils.timezone.now)),
                ('amigo_emisor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='amigo_emisor', to=settings.AUTH_USER_MODEL)),
                ('amigo_receptor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='amigo_receptor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Amigos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('usuario_receptor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='usuario_receptor', to=settings.AUTH_USER_MODEL)),
                ('usuario_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='usuario_solicitante', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='likes',
            constraint=models.UniqueConstraint(fields=('usuario', 'post'), name='likes'),
        ),
        migrations.AddConstraint(
            model_name='amigos',
            constraint=models.CheckConstraint(check=models.Q(('usuario_solicitante', models.F('usuario_receptor')), _negated=True), name='could_not_block_itself'),
        ),
        migrations.AddConstraint(
            model_name='amigos',
            constraint=models.UniqueConstraint(fields=('usuario_solicitante', 'usuario_receptor'), name='amigos'),
        ),
    ]
